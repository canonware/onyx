#!/usr/bin/env oonyx
#
# regress_docs <prefix> <srcdir> <clean> [<conf>...]

#$no_act true def
$no_act false def

argv length 4 lt {
    stderr
    `regress_docs usage: regress_docs <prefix> <srcdir> <clean> [<conf>...]\n'
    write pop
    1 die
} if

$PREFIX argv 1 get def

$SRCDIR argv 2 get def
$OBJDIR PREFIX `/obj' cat def
$DSTDIR PREFIX `/dst' cat def

$clean argv 3 get def

$conf [
    argv length 4 gt {
	argv 4 argv length 4 sub getinterval {} foreach
    } if
    `--prefix=' PREFIX `/dst' 3 ncat
    `-q'
] def

$COOK `cook' path def
$COOKOPT [`-nte'] def
#$COOKPAR [`-par' `8'] def
$COOKPAR [] def

$libs [`libonyx'] def
$bins [`onyx'] def

#
# Procedures.
#

# #obj log_print -
$log_print {
    `==[regress_docs (' PREFIX `)]==> ' 4 ndn 1 sprints `\n' 5 ncat
    print flush
} def

# #obj log_eprint -
$log_eprint {
    `==[regress_docs (' PREFIX `)]==>> ' 4 ndn 1 sprints `\n' 5 ncat
    print flush
} def

# #arr call -
$call {
    dup log_print
    no_act false eq {
	dup system 0 ne {
	    log_eprint
	    1 die
	}{
	    # Success.
	    pop
	} ifelse
    }{
	pop
    } ifelse
} def

# #target cook -
$cook {
    [
	exch
	COOK exch
	COOKOPT {exch} foreach
    ] call
} def

# #target cookpar -
$cookpar {
    [
	exch
	COOK exch
	COOKOPT {exch} foreach
	COOKPAR {exch} foreach
    ] call
} def

# Recursively delete directories, files, and symlinks in a directory tree.
#
# #dirname deltree -
$deltree {
    no_act false eq {
	dup `e' test {
	    dup {
		over `/' dn 3 ncat
		dup `f' test {
		    unlink
		}{ dup `L' test {
		    unlink
		}{ dup `d' test {
		    deltree
		}{
		    `Unknown file type for: ' exch cat log_eprint
		    1 die
		} ifelse
		} ifelse
		} ifelse
	    } dirforeach
	    rmdir
	} if
    }{
	pop
    } ifelse
} def

# Make sure a directory tree contains nothing but directories.
#
# #dir dir_empty -
$tree_empty {
    no_act false eq {
	dup {
	    over `/' dn 3 ncat
	    dup `d' test {
		tree_empty
	    }{
		`Directory tree not empty' log_eprint
		1 die
	    } ifelse
	} dirforeach
    } if
    pop
} def

#
# Set up.
#

`Start' log_print

PREFIX ` deltree' cat log_print
PREFIX deltree

PREFIX ` mkdir' cat log_print
no_act false eq {
    PREFIX mkdir
} if

OBJDIR ` mkdir' cat log_print
no_act false eq {
    OBJDIR mkdir
} if

OBJDIR ` cd' cat log_print
no_act false eq {
    OBJDIR cd
} if

[
    `../../' SRCDIR `/configure' 3 ncat
    conf {} foreach
] call

#
# Run tests.
#

# Parallelizable.
[
    `docs'
]{
    cookpar
} foreach

# Non-parallelizable.
[
    `docs_install'
    `uninstall'
    clean
]{
    cook
} foreach

# Make sure things were adequately cleaned up.
DSTDIR tree_empty
OBJDIR tree_empty

`Finish' log_print
