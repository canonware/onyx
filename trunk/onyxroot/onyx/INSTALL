################################################################################
#
# Version: <Version>
#
# Building and installation instructions for Canonware software distributions.
#
################################################################################

This software depends on the excellent 'cook' program for building.  'cook' is
freely available (GPLed).  For more information, see:

	http://www.canb.auug.org.au/~millerp/cook/cook.html

Building this distribution in many cases is as simple as typing the following
while in the root directory of the source tree:

	./configure
	cook everything

To install, do the above, then type:

	cook install

Additional build targets of finer granularity include:

	bins
	bins_[daps]
	libs
	libs_[daps]
	lib<libname>
	tests

Additional install targets of finer granularity include:

	install_{bins,libs}
	lib<libname>_install
	lib<libname>_install_[daps]

Miscellaneous targets include:

	check
	etags
	uninstall
	uninstall_{bins,libs}
	lib<libname>_uninstall
	clean
	distclean

Optionally, pass any of the following (not a definitive list) arguments to
'configure':

--prefix=<install-root-dir>
	Set the base directory in which to install.  For example:
	
	./configure --prefix=/usr/local

	will cause files to be installed into /usr/local/bin, /usr/local/man,
	/usr/local/include, and /usr/local/lib.

--enable-shared
	Build and install shared libraries.  If this option is specified,
	binaries will also be linked with the resulting shared libraries.  Note
	that the library version numbers are not currently being incremented to
	reflect incompatible changes, so you will need to handle this manually
	if upgrading from an older version of the libraries.

Optionally, define environment variables, including (not exclusively):

CFLAGS="?"
	Pass these flags to the compiler.  You probably shouldn't define this
	unless you know what you are doing.

CPPFLAGS="?"
	Pass these flags to the C preprocessor.  Note that CFLAGS is not passed
	to 'cpp' when 'configure' is looking for include files, so you must use 
	CPPFLAGS instead if you need to help 'configure' find header files.

LD_LIBRARY_PATH="?"
	'ld' uses this colon-separated list to find libraries.

LDFLAGS="?"
	Flags passed to 'gcc', which should normally be passed on to 'ld'.

PATH="?"
	'configure' uses this to find programs.
