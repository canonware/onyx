Test begin
=== [`fake_argv_0' `--foo' `--bar' `--bar=blah' `--biz=bang' `-a' `-b' `bam'] ===
1 --> --foo ==> null
2 --> --bar ==> null
3 --> --bar ==> `blah'
4 --> --biz ==> `bang'
5 --> -a ==> null
6 --> -b ==> `bam'
Parse success
Remainder: []
=== [`fake_argv_1' `--foo='] ===
fake_argv_1: Argument ("") unexpected for option --foo
fake_argv_1 usage:
    fake_argv_1 [--foo] [--bar[=<arg>]] [--biz=<arg>]
                [-a] [-b <arg>]
Parse error
=== [`fake_argv_2' `--foo=blah'] ===
fake_argv_2: Argument ("blah") unexpected for option --foo
fake_argv_2 usage:
    fake_argv_2 [--foo] [--bar[=<arg>]] [--biz=<arg>]
                [-a] [-b <arg>]
Parse error
=== [`fake_argv_3' `--bar='] ===
1 --> --bar ==> `'
Parse success
Remainder: []
=== [`fake_argv_4' `--bar=blah'] ===
1 --> --bar ==> `blah'
Parse success
Remainder: []
=== [`fake_argv_5' `--biz'] ===
fake_argv_5: Argument missing for option --biz
fake_argv_5 usage:
    fake_argv_5 [--foo] [--bar[=<arg>]] [--biz=<arg>]
                [-a] [-b <arg>]
Parse error
=== [`fake_argv_6' `--biz='] ===
1 --> --biz ==> `'
Parse success
Remainder: []
=== [`fake_argv_7' `-a' `remainder' `arguments'] ===
1 --> -a ==> null
Parse success
Remainder: [`remainder' `arguments']
=== [`fake_argv_8' `-b'] ===
fake_argv_8: Argument missing for option -b
fake_argv_8 usage:
    fake_argv_8 [--foo] [--bar[=<arg>]] [--biz=<arg>]
                [-a] [-b <arg>]
Parse error
=== [`fake_argv_9' `-bbam'] ===
1 --> -b ==> `bam'
Parse success
Remainder: []
=== [`fake_argv_10' `-b-a' `remainder' `arguments'] ===
1 --> -b ==> `-a'
Parse success
Remainder: [`remainder' `arguments']
=== [`fake_argv_11' `-b' `-a' `remainder' `arguments'] ===
1 --> -b ==> `-a'
Parse success
Remainder: [`remainder' `arguments']
=== [`fake_argv_12' `-b' `bam' `remainder' `arguments'] ===
1 --> -b ==> `bam'
Parse success
Remainder: [`remainder' `arguments']
=== [`fake_argv_13' `--foo' `--bar' `--' `--biz=bang' `more' `remainder'] ===
1 --> --foo ==> null
2 --> --bar ==> null
Parse success
Remainder: [`--biz=bang' `more' `remainder']
Test end
