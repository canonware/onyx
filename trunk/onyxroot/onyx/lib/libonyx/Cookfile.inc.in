/******************************************************************************
 *
 * <Copyright = jasone>
 * <License>
 *
 ******************************************************************************
 *
 * Version: Onyx <Version = onyx>
 *
 * Cookfile for libonyx.
 *
 * libbonyx is a bootstrap library that is created for bonyx, which is used to
 * generate the native startup code embedded in libonyx.
 *
 ******************************************************************************/

/* Include generated dependency files. */
#include-cooked [glob @objroot@/lib/libonyx/src/"*.d_*"]
#include-cooked [glob @objroot@/lib/libonyx/test/"*.d_*"]

/*
 * File lists.
 */

/* Include files that are installed. */
{
  local incs = libonyx.h ch.h dch.h gcdict.h mb.h mem.h nx.h nxa.h nxn.h nxo.h
               nxo_array.h nxo_boolean.h nxo_dict.h nxo_file.h nxo_fino.h
               nxo_integer.h nxo_mark.h nxo_name.h nxo_no.h nxo_null.h
               nxo_operator.h nxo_pmark.h nxo_stack.h nxo_string.h nxo_thread.h
               ql.h qr.h qs.h systemdict.h xep.h
#if @enable_oop@
               nxo_class.h nxo_instance.h
#endif
#if @enable_handle@
               nxo_handle.h
#endif
#if @enable_threads@
               cnd.h mq.h mtx.h nxo_condition.h nxo_mutex.h thd.h tsd.h
#endif
#if @enable_real@
               nxo_real.h
#endif
#if @enable_regex@
               nxo_regex.h nxo_regsub.h
#endif
               ;
  incs = [addprefix @srcroot@/lib/libonyx/include/libonyx/ [incs]];
  incs = [incs] @objroot@/lib/libonyx/include/libonyx/libonyx_defs.h;

  LIBONYX_INCS = [incs];
}

/* Source files common to libonyx and libbonyx. */
LIBONYX_COMMON_SRCS = [addprefix @srcroot@/lib/libonyx/src/
                                 libonyx.c ch.c dch.c gcdict.c mem.c nx.c nxa.c
                                 nxn.c nxo.c nxo_array.c nxo_boolean.c
                                 nxo_dict.c nxo_file.c nxo_fino.c nxo_integer.c
                                 nxo_mark.c nxo_name.c nxo_null.c nxo_operator.c
                                 nxo_pmark.c nxo_stack.c nxo_string.c
                                 nxo_thread.c systemdict.c xep.c
#if @enable_oop@
                                 nxo_class.c nxo_instance.c
#endif
#if @enable_handle@
                                 nxo_handle.c
#endif
#if @enable_threads@
                                 cnd.c mb.c mq.c mtx.c nxo_condition.c
                                 nxo_mutex.c thd.c tsd.c
#endif
#if @enable_real@
                                 nxo_real.c
#endif
#if @enable_regex@
                                 nxo_regex.c nxo_regsub.c
#endif
#if @enable_posix@
                                 envdict.c
#endif
                                 ];

/* Onyx source files that are used to generate C code. */
LIBONYX_NSRCS = [addprefix @srcroot@/lib/libonyx/src/
                           nx.nx.in nxo_thread.nx.in];

/* libbonyx-only source files. */
LIBBONYX_ONLY_SRCS = [fromto %0%.nx.in %0%_bootstrap.c [LIBONYX_NSRCS]];

/* libonyx-only source files. */
LIBONYX_ONLY_SRCS = [fromto @srcroot@/%0%.nx.in @objroot@/%0%_nxcode.c
                            [LIBONYX_NSRCS]];

/* Simple C tests.  Output is diff'ed with the expected (.exp file) output. */
LIBONYX_CTESTS = ch_a.c dch_a.c libonyx_a.c ql_a.c qr_a.c qs_a.c xep_a.c
#if @enable_threads@
                 cnd_a.c mq_a.c mtx_a.c nx_a.c thd_a.c thd_b.c thd_c.c tsd_a.c
#endif
#if [and @enable_handle@ @enable_posix_file@]
                 handle_a.c
#endif
                 ;
LIBONYX_CTESTS = [addprefix @srcroot@/lib/libonyx/test/ [LIBONYX_CTESTS]];

/* LaTeX source files. */
ONYX_TEX_SRCS += [addprefix @srcroot@/lib/libonyx/doc/latex/
                            ch.tex cnd.tex dch.tex gcdict.tex mb.tex mem.tex
                            mq.tex mtx.tex nx.tex nxa.tex nxn.tex nxo.tex
                            nxo_array.tex nxo_boolean.tex nxo_class.tex
                            nxo_dict.tex nxo_file.tex nxo_fino.tex
                            nxo_handle.tex nxo_instance.tex nxo_integer.tex
                            nxo_mark.tex nxo_mutex.tex nxo_name.tex nxo_no.tex
                            nxo_null.tex nxo_operator.tex nxo_pmark.tex
                            nxo_real.tex nxo_regex.tex nxo_regsub.tex
                            nxo_stack.tex nxo_string.tex nxo_thread.tex ql.tex
                            qr.tex qs.tex systemdict.tex thd.tex tsd.tex
                            xep.tex]
                 @objroot@/lib/libonyx/doc/latex/manual.tex;

/* Libraries. */
LIBONYX_REV = 13;

LIBBONYX_A = @objroot@/lib/libonyx/lib/libbonyx.a;
LIBONYX_A = @objroot@/lib/libonyx/lib/libonyx.a;
#if [matches elf @abi@]
LIBONYX_SNAME = libonyx.so.[LIBONYX_REV];
LIBONYX_LNAME = libonyx.so;
LIBONYX_L = @objroot@/lib/libonyx/lib/[LIBONYX_LNAME];
#elif [matches macho @abi@]
LIBONYX_SNAME = libonyx.[LIBONYX_REV].dylib;
LIBONYX_LNAME = libonyx.dylib;
LIBONYX_L = @objroot@/lib/libonyx/lib/[LIBONYX_LNAME];
#else /* if [matches aout @abi@] */
LIBONYX_SNAME = libonyx.so.[LIBONYX_REV].0;
LIBONYX_LNAME = ;
LIBONYX_L = ;
#endif
LIBONYX_S = @objroot@/lib/libonyx/lib/[LIBONYX_SNAME];

LDFLAGS = -L@objroot@/lib/libonyx/lib [LDFLAGS];

/*
 * User cook'ables.
 */

libbonyx_libs_a : [LIBBONYX_A];
libonyx_libs_a : [LIBONYX_A];
libonyx_libs_s : [LIBONYX_S];
libonyx : libonyx_libs_a libonyx_libs_s;

libonyx_libs_bootstrap : [BONYX]
{
  loop local f = [fromto @srcroot@/lib/libonyx/src/%.nx.in % [LIBONYX_NSRCS]]
  {
    cat @objroot@/lib/libonyx/src/[f].nx
      | [BONYX] @srcroot@/lib/libonyx/src/[f]_gen.nx
      > @srcroot@/lib/libonyx/src/[f]_bootstrap.c;
  }
}

libonyx_libs_tests : [fromto @srcroot@/%0%.c @objroot@/%0% [LIBONYX_CTESTS]];

libonyx_libs_check : libonyx_libs_tests [TONYX]
{
  @VERIFY@ -s @srcroot@ -o @objroot@
           [fromto @srcroot@/%0%.c @objroot@/%0% [LIBONYX_CTESTS]];
}

libonyx_libs_check_update : libonyx_libs_tests [TONYX]
{
  @VERIFY@ -u -s @srcroot@ -o @objroot@
           [fromto @srcroot@/%0%.c @objroot@/%0% [LIBONYX_CTESTS]];
}

libonyx_libs_install : libonyx_libs_install_i libonyx_libs_install_a
                       libonyx_libs_install_s;

libonyx_libs_uninstall :
{
  rm -f [glob [LIBDIR]/libonyx*];
  rm -rf [INCLUDEDIR]/libonyx;
}

libonyx_libs_clean :
{
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.d_a [LIBONYX_COMMON_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.d_b [LIBONYX_COMMON_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.d_s [LIBONYX_COMMON_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.o_a [LIBONYX_COMMON_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.o_b [LIBONYX_COMMON_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.o_s [LIBONYX_COMMON_SRCS]];

  rm -f [LIBONYX_ONLY_SRCS];
  rm -f [fromto %0%.c %0%.d_a [LIBONYX_ONLY_SRCS]];
  rm -f [fromto %0%.c %0%.d_s [LIBONYX_ONLY_SRCS]];
  rm -f [fromto %0%.c %0%.o_a [LIBONYX_ONLY_SRCS]];
  rm -f [fromto %0%.c %0%.o_s [LIBONYX_ONLY_SRCS]];

  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.d_b [LIBBONYX_ONLY_SRCS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.o_b [LIBBONYX_ONLY_SRCS]];

  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.d_a [LIBONYX_CTESTS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.o_a [LIBONYX_CTESTS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.out [LIBONYX_CTESTS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.diff [LIBONYX_CTESTS]];
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0% [LIBONYX_CTESTS]];

  rm -f [LIBBONYX_A] [LIBONYX_A] [LIBONYX_S] [LIBONYX_L];
}

libonyx_libs_distclean :
{
  rm -f [fromto @srcroot@/%0%.c @objroot@/%0%.perf [LIBONYX_CTESTS]];

  rm -f [fromto @srcroot@/%0%.nx.in @objroot@/%0%.nx [LIBONYX_NSRCS]];
}

/*
 * Various flags.
 */

CPPFLAGS = -I@srcroot@/lib/libonyx/include
           -I@objroot@/lib/libonyx/include/libonyx
           [CPPFLAGS];

/*
 * Build rules.
 */

libonyx_libs_install_i :
{
  @INSTALL@ -d [INCLUDEDIR]/libonyx;

  loop local f = [LIBONYX_INCS]
  {
    @INSTALL@ -m 0644 [f] [INCLUDEDIR]/libonyx/;
  }
}

libonyx_libs_install_common :
{
  @INSTALL@ -d [LIBDIR];
}

libonyx_libs_install_a : [LIBONYX_A] libonyx_libs_install_common
{
  @INSTALL@ -m 0444 [LIBONYX_A] [LIBDIR];
}

libonyx_libs_install_s : [LIBONYX_S] libonyx_libs_install_common
{
#if [matches macho @abi@]
  /* Set install_name correctly before installing. */
  [TCC] -undefined suppress -flat_namespace -dynamiclib -bind_at_load
        -compatibility_version [LIBONYX_REV]
        -current_version [LIBONYX_REV]
        -install_name @LIBDIR@/libonyx.[LIBONYX_REV].dylib
        -o [LIBONYX_S]
        [fromto @srcroot@/%0%.c @objroot@/%0%.o_s [LIBONYX_COMMON_SRCS]]
        [fromto @objroot@/%0%.c @objroot@/%0%.o_s [LIBONYX_ONLY_SRCS]];
#endif

  @INSTALL@ -m 0444 [LIBONYX_S] [LIBDIR];

#if [count [LIBONYX_LNAME]]
  rm -f [LIBDIR]/[LIBONYX_LNAME];
  ln -s [LIBONYX_SNAME] [LIBDIR]/[LIBONYX_LNAME];
#endif
}

/*
 * Dependencies.
 */

[LIBBONYX_A] : [fromto @srcroot@/%0%.c @objroot@/%0%.o_b [LIBONYX_COMMON_SRCS]]
               [fromto @srcroot@/%0%.c @objroot@/%0%.o_b [LIBBONYX_ONLY_SRCS]]
  set mkdir
{
  @AR@ cru [target] [younger];
  @RANLIB@ [target];
}

[LIBONYX_A] : [fromto @srcroot@/%0%.c @objroot@/%0%.o_a [LIBONYX_COMMON_SRCS]]
              [fromto @objroot@/%0%.c @objroot@/%0%.o_a [LIBONYX_ONLY_SRCS]]
  set mkdir
{
  @AR@ cru [target] [younger];
  @RANLIB@ [target];
}

[LIBONYX_S] : [fromto @srcroot@/%0%.c @objroot@/%0%.o_s [LIBONYX_COMMON_SRCS]]
              [fromto @objroot@/%0%.c @objroot@/%0%.o_s [LIBONYX_ONLY_SRCS]]
  set mkdir
{
  [TCC]
#if [matches elf @abi@]
        -shared
#elif [matches macho @abi@]
        -undefined suppress -flat_namespace -dynamiclib -bind_at_load
        -compatibility_version [LIBONYX_REV]
        -current_version [LIBONYX_REV]
        -install_name @abs_objroot@/[LIBONYX_S]
#else /* if [matches aout @abi@] */
        -shared
#endif
        -o [target] [need];

#if [count [LIBONYX_LNAME]]
  rm -f @objroot@/lib/libonyx/lib/[LIBONYX_LNAME];
  ln -s [LIBONYX_SNAME] @objroot@/lib/libonyx/lib/[LIBONYX_LNAME];
#endif
}
