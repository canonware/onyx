/******************************************************************************
 *
 * <Copyright = jasone>
 * <License>
 *
 ******************************************************************************
 *
 * Version: <Version>
 *
 * Master Cookfile.
 *
 ******************************************************************************/

/*
 * Standard definitions.
 */

/* Installation prefix. */
if [not [defined PREFIX]] then
  PREFIX = [split " " [strip "@prefix@"]];

/* Paths to programs used by the build system. */
SHELL = /bin/sh;
if [not [defined CC]] then
  CC = [split " " [strip "@CC@"]];

/* Build parameters. */
if [not [defined CPPFLAGS]] then
  CPPFLAGS = [split " " [strip "@CPPFLAGS@"]];
CPPDEFS = -D_REENTRANT;

if [not [defined CFLAGS]] then
  CFLAGS = [split " " [strip "@CFLAGS@"]];
A_CFLAGS = [CFLAGS];
S_CFLAGS = [CFLAGS] -fPIC -DPIC
#if [matches macho @abi@]
           -dynamic
#endif
           ;

if [not [defined LDFLAGS]] then
  LDFLAGS = [split " " [strip "@LDFLAGS@"]];

/* Documentation. */
#include-cooked @objdir@/doc/Cookfile.inc

/* Examples. */
#include-cooked @objdir@/examples/Cookfile.inc

/* Tests. */
#include-cooked @objdir@/test/Cookfile.inc

/* Binaries. */
#include-cooked @objdir@/bin/Cookfile.inc

/* Libraries. */
#include-cooked @objdir@/lib/Cookfile.inc

/* Modules. */
#include-cooked @objdir@/mod/Cookfile.inc

/*
 * User targets.
 */

all : libs mods bins examples tests docs
  set default
;

bootstrap : [addsuffix _bootstrap bins libs];

release : docs;

install : [addsuffix _install bins mods libs docs];

uninstall : [addsuffix _uninstall bins mods libs docs];

clean : [addsuffix _clean docs tests bins mods libs]
{
  /*
   * Delete .cook.fp files from the source tree and object tree.
   * Delete Cookfile.list files from the object tree. 
   */
  [SHELL] -e;
data
#![SHELL]

for i in `find @srcdir@ -type f -name .cook.fp` ; do
	echo rm $i;
	rm $i;
done
for i in `find @objdir@ -type f -name .cook.fp` ; do
	echo rm $i;
	rm $i;
done
for i in `find @objdir@ -type f -name Cookfile.list` ; do
	echo rm $i;
	rm $i;
done
dataend
}

distclean : clean [addsuffix _distclean tests bins mods libs]
{
  rm -f @objdir@/config.log;
  rm -f @objdir@/config.status;
  rm -f @cfghdrs@;
  rm -f @cfgoutputs@;
}

relclean : distclean [addsuffix _relclean docs];
