%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% <Copyright = jasone>
% <License>
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Version: <Version>
%
% This file is processed by onyx_nxcode_gen.nx to produce a more compact
% embedded version in onyx_nxcode.c.  Due to bootstrapping issues, this cannot
% safely be done automatically as part of the build process.  In order to make
% changes to this file take effect, either type:
%
%   cook bootstrap
%
% or
%
%   cat onyx_nxcode.nx | onyx onyx_nxcode_gen.nx > onyx_nxcode.c
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Enclose this entire file in an outer array to defer execution.
{

% ostack currently contains: %ONYX_RPATH %ONYX_MPATH

% Define ONYX_RPATH and ONYX_MPATH in envdict.  They may already be defined, in
% which case we want to prepend `.:' and append `:%ONYX_[RM]PATH'.
[
	/ONYX_MPATH /ONYX_RPATH
]{
	`.:'
	% %ONYX_[MR]PATH /ONYX_[MR]PATH `.:'
	envdict 2 index known {
		% Already defined.  Prepend and append.
		envdict 2 index get catenate `:' catenate
	} if
	% %ONYX_[MR]PATH /ONYX_[MR]PATH `.:/ONYX_[MR]PATH:'
	3 2 roll catenate
	% /ONYX_[MR]PATH `.:/ONYX_[MR]PATH:%ONYX_[MR]PATH'
	envdict 3 1 roll put
} foreach

systemdict begin

% `filename' require -
/require {
	% Make sure the argument is a string.
	dup type /stringtype ne {
		/typecheck throw
	} if

	% /ONYX_RPATH in envdict is a colon-separated path that we need to
	% search.  Use the search operator to split the path.
	envdict /ONYX_RPATH get
	{
		% `filename' %path
		`:' search {
			% `filename' %post `:' %dir
			exch pop
			% `filename' %post %dir
			`/' catenate 2 index catenate
			% `filename' %post %filepath
			dup `f' test {
				% Found.  Clean up the stack.
				3 1 roll pop pop

				% Open the file and evaluate it.
				`r' open cvx eval
				false
				exit
			}{
				% Not found.
				pop
			} ifelse
		}{
			% Last path component.
			% `filename' %dir
			`/' catenate exch catenate
			% %filepath
			dup `f' test {
				% Found.  Open the file and evaluate it.
				`r' open cvx eval
				false
			}{
				% Not found.
				pop
				true
			} ifelse
			exit
		} ifelse
	} loop

	% Throw an error if we didn't find the file.
	{
		/undefinedfilename throw
	} if
} def

% `filename' `symbol' mrequire -
/mrequire {
	% Make sure the arguments are strings.
	1 index type /stringtype ne {
		/typecheck throw
	} if
	dup type /stringtype ne {
		/typecheck throw
	} if

	% /ONYX_MPATH in envdict is a colon-separated path that we need to
	% search.  Use the search operator to split the path.
	envdict /ONYX_MPATH get
	{
		% `filename' `symbol' %path
		`:' search {
			% `filename' `symbol' %post `:' %dir
			exch pop
			% `filename' `symbol' %post %dir
			`/' catenate 3 index catenate
			% `filename' `symbol' %post %filepath
			dup `f' test {
				% Found.  Clean up the stack.
				exch pop
				exch
				3 2 roll pop

				% Load the module.
				modload
				false
				exit
			}{
				% Not found.
				pop
			} ifelse
		}{
			% Last path component.
			% `filename' `symbol' %dir
			`/' catenate 3 2 roll catenate
			% `symbol' %filepath
			dup `f' test {
				% Found.  Load the module.
				exch modload
				false
			}{
				% Not found.
				pop pop
				true
			} ifelse
			exit
		} ifelse
	} loop

	% Throw an error if we didn't find the file.
	{
		/undefinedfilename throw
	} if
} def

end % systemdict.

} % End deferral.
