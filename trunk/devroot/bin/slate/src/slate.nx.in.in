%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% <Copyright = jasone>
% <License>
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Version: Slate <Version = slate>
%
% Entry point for the slate text editor.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Add slate paths.
onyxdict begin
/rpath_post rpath_post [@slate_rpath_post@] cat def
/mpath_post mpath_post [@slate_mpath_post@] cat def
end

`modslate/modslate.nx' require

threaddict begin
systemdict begin
slatedict begin
globaldict begin
userdict begin

% - hs -
/hs {
	% ANSI home cursor sequence: `\x1b[H'
	`\x1b[H' print
} def

% - cs -
/cs {
	% ANSI clear screen sequence: `\x1b[2J'
	`\x1b[2J' print
	hs
} def

% %=buffer= buffer_name %name
/buffer_name {
	buffer_aux_get /name get
} def

% - status_line -
/status_line {
	% Reverse video.
	`\x1b[7m' print
	
	% History.
	scratch buffer_undoable {
		` <' print
	}{
		` [' print
	} ifelse
	scratch buffer_history_active {
		`+' print
	}{
		`-' print
	} ifelse
	scratch buffer_redoable {
		`>' print
	}{
		`]' print
	} ifelse

	% Line.
	` L' print
	bpoint marker_line cvs print
	`/' print
	scratch buffer_lines cvs print

	% Column.
	` C' print
	bpoint marker_position
	bpoint marker_copy dup -1 marker_seekline pop marker_position
	sub cvs print
	`/' print
	bpoint marker_copy dup 1 marker_seekline pop marker_position
	bpoint marker_copy dup -1 marker_seekline pop marker_position
	sub cvs print

	% Character.
	` c' print
	bpoint marker_position cvs print
	`/' print
	scratch marker 0 /SEEK_END marker_seek cvs print

	% Mark.
	` m' print
	bmark marker_position cvs print

	% Buffer name.
	` ' print
	scratch buffer_name print

	`\r\n' print
	% Reset attributes.
	`\x1b[m' print

%	`-------------------------------------------------------------------------------' print
%	`\r\n' print
} def

% %=buffer= b2s %string
/b2s {
	marker dup marker_copy
	dup 0 /SEEK_END marker_seek pop
	marker_range_get
} def

% %string srender -
/srender {
	{
		dup 16#a eq {
			`\r' print
		} if
		stdout exch write
	} foreach
} def

% - redisplay -
/redisplay {
	cs
	status_line

	scratch b2s
%	1 sprint
	srender

	hs
	`\r\n' print
	bob dup 0 /SEEK_SET marker_seek pop bpoint marker_range_get
%	1 sprint
	srender flush
} def

% - getc %string
/getc {
%	pstack
	stdin ` ' read
	true eq {
		quit
	} if
%	`-->' print
%	dup 1 sprint
%	`<--\n' print flush
} def

% %string self_insert_char -
/insert_string {
	bpoint exch marker_before_insert
} def

% Undefined characters are inserted literally.
/keytable <
	`\b' {
		bmark dup 0 bpoint marker_seek pop
		bpoint dup -1 marker_seek pop
		marker_range_cut pop
%		`Cut -->' exch cat `<--\n' cat stderr exch write
	}
	`' {
		bmark dup 0 bpoint marker_seek pop
		bpoint dup 1 marker_seek pop
		marker_range_cut pop
	}
	`\r' {
		`\n' insert_string
	}
	% C-q
	`\x11' {
		`\r\n' print gcdict /stats get eval 2 sprint flush
		quit
	}
	% C-u
	`\x15' {
		bpoint buffer_undo
	}
	% C-r
	`\x12' {
		bpoint buffer_redo
	}
	% C-b
	`\x02' {
		bpoint -1 marker_seek pop
	}
	% C-f
	`\x06' {
		bpoint 1 marker_seek pop
	}
	% C-space
	`\x00' {
		/bmark bpoint marker_copy def
	}
	% C-w
	`' {
		scratch bpoint buffer_history_startgroup
		bmark bpoint marker_range_cut pop
		scratch buffer_history_endgroup
	}
	% C-a
	`' {
		bpoint -1 marker_seekline
	}
	% C-e
	`' {
		bpoint 1 marker_seekline
	}
	% C-y
	`' {
		scratch dup buffer_history_active
		not buffer_history_setactive
	}
	% C-c
	`\x03' {
		
		quit
	}
> def

% %string interpc -
/interpc {
	keytable 1 idup known {
		keytable exch get eval
	}{
		insert_string
	} ifelse
} def

/scratch buffer def
/bpoint scratch marker def
/bmark scratch marker def
/bob scratch marker def

scratch <
	/name	`*scratch*'
> buffer_aux_set

2 gcdict /setperiod get eval

scratch true buffer_history_setactive

stdin 0 setiobuf
{
	redisplay
%	`\x1b[H\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n' print gcdict /stats get eval 2 sprints print flush
	getc
	interpc
} loop
