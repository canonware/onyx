dnl
dnl <Copyright = jasone>
dnl <License>
dnl
dnl Version: <Version>
dnl
dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/xvx.h)
AC_CONFIG_HEADER(include/config.h)

dnl Check for programs.
dnl Trick AC_PROG_CC into not defining CFLAGS, even if it wasn't specified on
dnl the command line.
CFLAGS=$CFLAGS
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(PERL, perl, , $PATH)
AC_PATH_PROG(CHMOD, chmod, , $PATH)
AC_PATH_PROG(BASENAME, basename, , $PATH)
AC_PATH_PROG(DIFF, diff, , $PATH)
AC_PATH_PROG(CAT, cat, , $PATH)
AC_PATH_PROG(ETAGS, etags, , $PATH)

AC_ARG_WITH(libstash-prefix, [  --with-libstash-prefix  Path to libstash])
if test ! -z "$with_libstash_prefix"; then
  CPPFLAGS="$CPPFLAGS -I$with_libstash_prefix/include"
  LDFLAGS="$LDFLAGS -L$with_libstash_prefix/lib"
else
  if test -d "../lib/c/libstash"; then
    CPPFLAGS="$CPPFLAGS -I../lib/c/libstash/include"
    LDFLAGS="$LDFLAGS -L../lib/c/libstash/lib"
  else
    if test "x$prefix" != "xNONE"; then
      CPPFLAGS="$CPPFLAGS -I$prefix/include"
      LDFLAGS="$LDFLAGS -L$prefix/lib"
    fi
  fi
fi

AC_ARG_WITH(libsock-prefix, [  --with-libsock-prefix  Path to libsock])
if test ! -z "$with_libsock_prefix"; then
  CPPFLAGS="$CPPFLAGS -I$with_libsock_prefix/include"
  LDFLAGS="$LDFLAGS -L$with_libsock_prefix/lib"
else
  if test -d "../lib/c/libsock"; then
    CPPFLAGS="$CPPFLAGS -I../lib/c/libsock/include"
    LDFLAGS="$LDFLAGS -L../lib/c/libsock/lib"
  else
    if test "x$prefix" != "xNONE"; then
      CPPFLAGS="$CPPFLAGS -I$prefix/include"
      LDFLAGS="$LDFLAGS -L$prefix/lib"
    fi
  fi
fi


AC_ARG_WITH(debug, [  --with-debug            Define debugging macros and link binaries with
                          debugging libraries])

AC_ARG_WITH(profile, [  --with-profile          Link binaries with profiling libraries])

if test "x$with_debug" = "xyes" -a "x$with_profile" = "xyes" ; then
  AC_MSG_ERROR(--with-debug and --with-profile are incompatible)
fi

dnl
dnl Set cpp flags.
dnl
if test "x$with_debug" = "xyes" ; then
  CPPFLAGS="$CPPFLAGS -D_LIBSTASH_DEBUG -D_LIBSOCK_DEBUG -D_XVX_DEBUG"
elif test "x$with_profile" = "xyes" ; then
  CPPFLAGS="$CPPFLAGS"
else
  CPPFLAGS="$CPPFLAGS"
fi

dnl
dnl Set compiler flags.
dnl
if test "x$CFLAGS" = "x" ; then
  if test "x$with_debug" = "xyes" ; then
    CFLAGS=""
  elif test "x$with_profile" = "xyes" ; then
    CFLAGS="-O2 -pg"
  else
    CFLAGS="-O2"
  fi

  CFLAGS="$CFLAGS -g3 -Wall -pipe"
fi

dnl
dnl Check for headers.
dnl
AC_CHECK_HEADERS(pthread.h, , AC_MSG_ERROR(Cannot build without pthread.h))
dnl AC_CHECK_HEADERS(libstash/libstash_r.h, , \
dnl                  AC_MSG_ERROR(Cannot build without libstash/libstash_r.h))
dnl AC_CHECK_HEADERS(libsock/libsock.h, , \
dnl                  AC_MSG_ERROR(Cannot build without libsock/libsock.h))


dnl
dnl Check for libraries.
dnl
if test "x$with_debug" = "xyes" ; then
  CW_USE_LIBSOCK(_d, LIBS, ../lib/c)
  CW_USE_LIBSTASH_R(_d, LIBS, ../lib/c)
elif test "x$with_profile" = "xyes" ; then
  CW_USE_LIBSOCK(_p, LIBS, ../lib/c)
  CW_USE_LIBSTASH_R(_p, LIBS, ../lib/c)
else
  CW_USE_LIBSOCK(, LIBS, ../lib/c)
  CW_USE_LIBSTASH_R(, LIBS, ../lib/c)
fi

AC_CHECK_LIB(pthread, pthread_create, LIBS="$LIBS -lpthread", \
  AC_CHECK_LIB(c_r, pthread_create, \
    LIBS="$LIBS -pthread", AC_MSG_ERROR(Cannot find the pthreads library)))

dnl
dnl Print out the results of configuration.
dnl
AC_MSG_RESULT(===============================================================================)
AC_MSG_RESULT(CFLAGS   : ${CFLAGS})
AC_MSG_RESULT(CPPFLAGS : ${CPPFLAGS})
AC_MSG_RESULT(LDFLAGS  : ${LDFLAGS})
AC_MSG_RESULT(LIBS     : ${LIBS})
AC_MSG_RESULT()
AC_MSG_RESULT(Prefix   : ${prefix})
AC_MSG_RESULT(===============================================================================)

dnl
dnl Generate the following files.
dnl
AC_OUTPUT(Makefile)
