dnl
dnl <Copyright = jasone>
dnl <License>
dnl
dnl Version: <Version>
dnl
dnl Process this file with autoconf to produce a configure script.
AC_INIT(Howto.cook.in)

objdir=.
AC_SUBST(objdir)

dnl if test "x$objdir" = "x$srcdir" ; then
dnl   dnl Clean up the mess that has thus far been made by autoconf.
dnl   rm -f config.cache config.log confdefs.h
dnl 
dnl   echo "Object directory same as source directory.  Changing to \"obj\""
dnl   mkdir -p obj
dnl   cd obj
dnl   exec ../configure $@
dnl fi

cfghdrs=

CW_BUILD_LIB(libstash, lib_stash)
CW_BUILD_LIB(libsock, lib_sock)
CW_BUILD_LIB(libstil, lib_stil)

CW_BUILD_BIN(blow, bin_blow)
CW_BUILD_BIN(echos, bin_echos)
CW_BUILD_BIN(ncat, bin_ncat)
CW_BUILD_BIN(proxy, bin_proxy)
CW_BUILD_BIN(stil, bin_stil)
CW_BUILD_BIN(stile, bin_stile)
CW_BUILD_BIN(suck, bin_suck)

AC_CONFIG_HEADER($cfghdrs)
AC_SUBST(cfghdrs)

AC_CANONICAL_HOST
case "${host}" in
  i386-*-freebsd*)
	AC_DEFINE(_CW_OS_FREEBSD, )
        ;;
  *-*-linux*)
	AC_DEFINE(_CW_OS_LINUX, )
        ;;
  *-*-solaris2*)
	AC_DEFINE(_CW_OS_SOLARIS, )
	AC_DEFINE(_POSIX_PTHREAD_SEMANTICS)
	LIBS="$LIBS -lposix4 -lsocket -lnsl"
        ;;
esac

dnl Check for programs.
dnl Trick AC_PROG_CC into not defining CFLAGS, even if it wasn't specified on
dnl the command line.
CFLAGS=$CFLAGS
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, , $PATH)
AC_PATH_PROG(PERL, perl, , $PATH)
AC_PATH_PROG(BASENAME, basename, , $PATH)
AC_PATH_PROG(CHMOD, chmod, , $PATH)
AC_PATH_PROG(INSTALL, install, , $PATH)
AC_PATH_PROG(CAT, cat, , $PATH)
AC_PATH_PROG(DIFF, diff, , $PATH)
AC_PATH_PROG(ETAGS, etags, , $PATH)

VERIFY="$objdir/test/verify"
AC_SUBST(VERIFY)

CW_USE_PTHREADS()
AC_CHECK_FUNCS(poll, , AC_MSG_ERROR(Cannot build without poll))

dnl Do not build shared libraries by default.
CW_DISABLE_SHARED()

dnl Define preprocessor macros.

dnl Check for header files.
dnl AC_HEADER_STDC
AC_CHECK_HEADERS(poll.h, , AC_MSG_ERROR(Cannot build without unistd.h))
AC_CHECK_HEADERS(unistd.h, , AC_MSG_ERROR(Cannot build without poll.h))

dnl Check for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

AC_CHECK_SIZEOF(signed char, 1)
AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(signed short, 2)
AC_CHECK_SIZEOF(unsigned short, 2)
AC_CHECK_SIZEOF(int, 4) dnl defines SIZEOF_INT
AC_CHECK_SIZEOF(unsigned, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(unsigned long, 4)
AC_CHECK_SIZEOF(long long, 4)
AC_CHECK_SIZEOF(unsigned long long, 4)
AC_CHECK_SIZEOF(int *, 4) dnl defines SIZEOF_INT_P
AC_CHECK_SIZEOF(float, 4)
AC_CHECK_SIZEOF(double, 8)
AC_CHECK_SIZEOF(long double, 12)

dnl Find maximum iovec compatible with readv()/writev().
AC_TRY_RUN([
#include <stdio.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <unistd.h>

int
main()
{
  int i, fd, nwrite;
  char buf[1024];
  struct iovec iov[1024];

  for (i = 0; i < 1024; i++)
  {
    iov[i].iov_base = &buf[i];
    iov[i].iov_len = 1;
  }

  fd = open("_CW_MAX_IOV", O_RDWR | O_CREAT | O_TRUNC, 0644);
  
  for (i = 1024; i > 16; i >>= 1)
    if (-1 != writev(fd, iov, i))
      break;

  fprintf(stderr, "iovcnt: %d\n", i);

  ftruncate(fd, 0);
  lseek(fd, 0, SEEK_SET);
  nwrite = sprintf(buf, "%d\n", i);
  write(fd, buf, nwrite);

  close(fd);
  return 0;
}
])
maxiov=`cat _CW_MAX_IOV`
AC_MSG_RESULT(_CW_MAX_IOV... $maxiov)
AC_DEFINE_UNQUOTED(_CW_MAX_IOV, $maxiov)
rm -f _CW_MAX_IOV

dnl
dnl Print out the results of configuration.
dnl
AC_MSG_RESULT(===============================================================================)
AC_MSG_RESULT(CFLAGS   : ${CFLAGS})
AC_MSG_RESULT(CPPFLAGS : ${CPPFLAGS})
AC_MSG_RESULT(LDFLAGS  : ${LDFLAGS})
AC_MSG_RESULT(LIBS     : ${LIBS})
AC_MSG_RESULT()
AC_MSG_RESULT(objdir   : ${srcdir})
AC_MSG_RESULT(srcdir   : ${objdir})
AC_MSG_RESULT(prefix   : ${prefix})
AC_MSG_RESULT(===============================================================================)

dnl Process the following files.

AC_OUTPUT(Howto.cook \
test/verify \
)

dnl autoconf doesn't keep the execute bit if it's set for the input file, so do
dnl it manually.
echo chmod u+x $objdir/test/verify
chmod u+x $objdir/test/verify
