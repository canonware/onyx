2001-02-03  Jason Evans  <jasone@canonware.com>

	* : Fold _LIBSOCK_DEBUG into _LIBSOCK_DBG.

2000-11-28  Jason Evans  <jasone@canonware.com>

	* : Update OOM handling to use exceptions.

	* src/socks.c (socks_listen): Zero the sockaddr_in structure
	before setting it so that when the kernel searches for an
	interface, it doesn't get confused by any garbage in the pad.

2000-06-28  Jason Evans  <jasone@canonware.com>

	* : Complete man pages.

1999-12-28  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_l_get_host_ip): Print IP address correctly on
	big- and little-endian machines.

1999-11-10  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_p_entry_func): Correctly calculate whether
	the sock's input buffer was empty before data were appended in
	order to decide whether to send a notification.  This bug showed
	up if the sock's input buffer was larger than the OS's maximum
	incoming data buffer for the corresponding socket.

	* src/sock.c: Add magic to the cw_sock_t structure.

1999-11-02  Jason Evans  <jasone@canonware.com>

	* bin/proxy.c: Only increment connection number for log file
	naming on successful connections.

1999-10-28  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_write): Fix two bugs that somewhat cancelled
	each other out.  One bug caused writev() errors to never be
	noticed, and the other bug was due to not handling EAGAIN as
	acceptable.

1999-10-21  Jason Evans  <jasone@canonware.com>

	* bin/ncat.c: Clarify error messages.

1999-09-30  Jason Evans  <jasone@canonware.com>

	* : Remove all _LIBSTASH_USE_* and _LIBSOCK_USE_* macros.  All
	headers are now always included when possible.

1999-09-24  Jason Evans  <jasone@canonware.com>

	* : Make handling of memory errors more consistent.  Never
	disconnect due to a memory error; instead yield the processor in
	the hope that memory will become available.

	* src/sockb.c (sockb_p_entry_func): Try to read any remaining
	buffered data if POLLHUP is set in revents in order to avoid data
	loss.

1999-09-23  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_buffered_in): Add.
	
	* src/sock.c (sock_connect): 
	(sock_read): 
	* src/socks.c (socks_accept): 
	Convert a_timeout parameter to (struct timespec).  Standardize the
	interpretation of timeouts as an absolute time interval, rather
	than absolute time since the epoch.

1999-09-17  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_new): Treat (0 == a_in_max_buf_size) as a
	special case, such that the sockb thread will never try to read
	data for the sock.

	(sock_wrap): Add the a_init argument.  This bypasses all internal
	socket configuration.

	(sock_read): Don't return an error due to disconnection until all
	buffered incoming data have been consumed.

	* bin/ncat.c: Add.  `ncat' pipes data read from stdin to a sock,
	and pipes the data read from the sock to stdout.

	* src/sockb.c (sockb_p_entry_func): Fix a race condition bug that
	could result in no mq message being sent when using
	sockb_in_notify() if a socket is remotely disconnected after the
	last time that the program calls a sock_*() function.

	Only send an mq message after readv() if the sock's input buffer
	was empty before the readv().

1999-09-14  Jason Evans  <jasone@canonware.com>

	* bin/echos.c: Move critical code out of assertions so that the
	echo server will work, even if --with-debug is not passed to
	configure.

1999-09-12  Jason Evans  <jasone@canonware.com>

	* include/libsock/src/sock.c (sock_connect): Change retval from
	cw_bool_t to cw_sint32_t, in order to make non-blocking connect
	useful.

1999-09-08  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_write): Try to write data immediately instead
	of always forcing a context switch to the sockb thread.

1999-09-06  Jason Evans  <jasone@canonware.com>

	* bin/proxy.c : Add the -f flag and support hex and ascii logging.

1999-08-25  Jason Evans  <jasone@canonware.com>

	* : Completely get rid of select() usage.

	* src/socks.c (socks_listen): Use 511 backlog for listen(), since
	-1 doesn't do the right thing on Solaris.

	* : Get rid of some more artifacts of the now non-existent
	FD_SETSIZE limitation workarounds.

1999-08-18  Jason Evans  <jasone@canonware.com>

	* src/sock.c: Improve locking logic to avoid various potential
	race conditions and deadlock.

	* : Don't ignore memory allocation errors.
	
	* src/sockb.c (sockb_l_get_spare_fd): Don't limit the number of
	sockets to FD_SETSIZE.

1999-08-06  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_p_entry_func): Use poll() instead of
	select().  This avoids the 1024 FD_SETSIZE limitation on Solaris,
	and generally improves scalability, though it makes libsock
	somewhat less portable.  FreeBSD prior to 20 June 1999 cannot deal
	with this.
	(sockb_init): Add a_max_fds argument.

1999-08-01  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_is_connected): Reverse the return value.

1999-07-28  Jason Evans  <jasone@canonware.com>

	* src/socks.c (socks_listen): Set SO_REUSEADDR option on socket.

	* src/sockb.c (sockb_p_entry_func): Fix a pseudo-memory leak of
	g_sockb->messages_pezz allocations.

1999-07-26  Jason Evans  <jasone@canonware.com>

	* Makefile.{gnu,bsd}.in: Quiet noise caused by dependency updating.

1999-07-14  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_p_entry_func): Do not NULL out the sock
	pointer when an error causes the corresponding socket to be
	closed, since the pointer may still be needed for the
	unregistration callback.

1999-06-30  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_p_entry_func): Add notification for explicit
	sock close (UNREGISTER message).

1999-06-21  Jason Evans  <jasone@canonware.com>

	* bin/blow.c: Add.  'blow' is a simple utility for spewing data
	across sockets as fast as possible using libsock.

	* bin/suck.c: Add.  'suck' is a data sink that discards incoming
	socket data as fast as possible using libsock.

	* src/sockb.c (sockb_in_notify): Add.  This function provides a
	way to block while waiting for events on a set of sockets.
	(sockb_p_entry_func): Convert to a unified message queue.

1999-06-19  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_p_entry_func): Significant reworking of the
	event loop logic.  The main advantage of the changes is that when
	a socket error is detected, the socket can be disconnected
	immediately, rather than asking the sock code running in another
	thread to do so.  The potential for deadlocks is much less now,
	and the locking overhead is somewhat less.

1999-06-18  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_read): Add.  Remove sock_read_[no]block(),
	since sock_read() provides the same functionality.

	* include/libsock/socks.h (socks_accept): Remove
	socks_accept_[no]block() and replace them with socks_accept()
	which offers the capabilities of both removed functions, as well
	as timeout capability.

1999-05-20  Jason Evans  <jasone@canonware.com>

	* include/libsock/sockb.h : sockb_get_spare_bufel() -->
	sockb_get_spare_bufc().

1999-05-13  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_connect): Add timeout parameter.

1999-05-07  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_read_block): Add timeout parameter.

1999-04-11  Jason Evans  <jasone@canonware.com>

	* src/sockb.c: Use pezz instead of bufpool.

1999-04-09  Jason Evans  <jasone@canonware.com>

	* configure.in: Add --disable-shared.

1999-04-06  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_read_block, sock_read_noblock): Set retval
	correctly, even if returning less than the total amount of
	buffered data.

1999-04-05  Jason Evans  <jasone@canonware.com>

	* src/sock.c (sock_read_block, sock_read_noblock): Don't try to
	read more data than has been received.

1999-03-24  Jason Evans  <jasone@canonware.com>

	* src/sockb.c (sockb_init): Deal with being called, even if sockb
	is already initialized.

	* src/sock.c (sock_read_noblock): Add a_max_read parameter.
	(sock_read_block): Add a_max_read parameter.

1999-03-16  Jason Evans  <jasone@canonware.com>

	* bin/proxy.c : Add command line interface.  Add ability to log to
	files.  Parsing of options sent through the socket stream does not
	work yet (it was broken when the new buf cod was integrated).

	* : Fix some lingering deadlock problems.  Correctly implement
	ability to stop reading from a socket once the sock's incoming
	buffer is full.  Finish integration with libstash's new buf code.

1999-03-04  Jason Evans  <jasone@canonware.com>

	* include/libsock/libsock.h: Remove namespace mangling.

1999-02-24  Jason Evans  <jasone@canonware.com>

	* : Convert to new buf code.
	
	* : Split libsqrl into libsock and libbr.
