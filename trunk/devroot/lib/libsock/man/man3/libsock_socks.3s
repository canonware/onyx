.ig \" -*-mode:nroff-*-

<Copyright = jasone>
<License>

Version: <Version>
..
.TH libsock_socks 3s "libsock, version <Version>"
.Nm libsock
.hy 1
.SH NAME
socks - Socket server class.
.SH SYNOPSIS
\fB#include <libsock/libsock.h>\fR

.I cw_socks_t *
.br
.B socks_new
.RI ( "cw_socks_t *a_socks" )

.I void
.br
.B socks_delete
.RI ( "cw_socks_t *a_socks" )

.I cw_bool_t
.br
.B socks_listen
.RI ( "cw_socks_t *a_socks" ", " "cw_uint32_t a_mask" ", " "int *r_port" )

.I cw_sock_t *
.br
.B socks_accept
.RI ( "cw_socks_t *a_socks" ", " "struct timespec *a_timeout" ", "
.IR "cw_sock_t *r_sock" )

.SS Debugging (dbg) symbols
.TP
\*(lqsocks_error\*(rq
Errors that indicate a programming or network error.

.SH DESCRIPTION
\fBsocks\fR implements a socket listener (server).  \fBsocks\fR is used to
accept connections to a port and create a \fBsock\fR instance for each
connection.

.SH USAGE
.I cw_socks_t *
.br
.B socks_new
.RI ( "cw_socks_t *a_socks" )
.RS
Input(s):
.RS
.IR a_socks :
.RS
Pointer to a socks.
.RE
.IR <input> :
.RS
<input description>
.RE
.RE
Output(s):
.RS
.IR retval :
.RS
<retval description>
.RE
.RE
Description:
.RS
<description>
.RE
.RE

.I void
.br
.B socks_delete
.RI ( "cw_socks_t *a_socks" )
.RS
Input(s):
.RS
.IR a_socks :
.RS
Pointer to a socks.
.RE
.IR <input> :
.RS
<input description>
.RE
.RE
Output(s):
.RS
.IR retval :
.RS
<retval description>
.RE
.RE
Description:
.RS
<description>
.RE
.RE

.I cw_bool_t
.br
.B socks_listen
.RI ( "cw_socks_t *a_socks" ", " "cw_uint32_t a_mask" ", " "int *r_port" )
.RS
Input(s):
.RS
.IR a_socks :
.RS
Pointer to a socks.
.RE
.IR <input> :
.RS
<input description>
.RE
.RE
Output(s):
.RS
.IR retval :
.RS
<retval description>
.RE
.RE
Description:
.RS
<description>
.RE
.RE

.I cw_sock_t *
.br
.B socks_accept
.RI ( "cw_socks_t *a_socks" ", " "struct timespec *a_timeout" ", "
.IR "cw_sock_t *r_sock" )
.RS
Input(s):
.RS
.IR a_socks :
.RS
Pointer to a socks.
.RE
.IR <input> :
.RS
<input description>
.RE
.RE
Output(s):
.RS
.IR retval :
.RS
<retval description>
.RE
.RE
Description:
.RS
<description>
.RE
.RE

.SH SEE ALSO
libsock(3s).

.SH HISTORY
Written by Jason Evans <jasone@canonware.com>.
