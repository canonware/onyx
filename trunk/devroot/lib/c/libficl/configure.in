dnl
dnl <Copyright = jasone>
dnl <License>
dnl
dnl Version: <Version>
dnl
dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/libficl/libficl.h)
AC_CONFIG_HEADER(include/libficl/libficl_defs.h)

AC_CANONICAL_HOST

dnl Check for programs.
dnl Trick AC_PROG_CC into not defining CFLAGS, even if it wasn't specified on
dnl the command line.
CFLAGS=$CFLAGS
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, , $PATH)
AC_PATH_PROG(PERL, perl, , $PATH)
AC_PATH_PROG(CHMOD, chmod, , $PATH)
AC_PATH_PROG(BASENAME, basename, , $PATH)
AC_PATH_PROG(DIFF, diff, , $PATH)
AC_PATH_PROG(CAT, cat, , $PATH)
AC_PATH_PROG(ETAGS, etags, , $PATH)

AC_CHECK_FUNCS(poll, , AC_MSG_ERROR(Cannot build without poll))

CW_DISABLE_SHARED()

AC_ARG_WITH(libstash-prefix, [  --with-libstash-prefix  Path to libstash])
if test ! -z "$with_libstash_prefix"; then
  CPPFLAGS="$CPPFLAGS -I$with_libstash_prefix/include"
  LDFLAGS="$LDFLAGS -L$with_libstash_prefix/lib"
else
  if test -d "../libstash"; then
    CPPFLAGS="$CPPFLAGS -I../libstash/include"
    LDFLAGS="$LDFLAGS -L../libstash/lib"
  else
    if test "x$prefix" != "xNONE"; then
      CPPFLAGS="$CPPFLAGS -I$prefix/include"
      LDFLAGS="$LDFLAGS -L$prefix/lib"
    fi
  fi
fi

CW_USE_PTHREADS()

AC_ARG_WITH(debug, [  --with-debug            Define debugging macros and link binaries with
                          debugging libraries])

dnl Check for libraries.
CW_USE_LIBSTASH_R(_d, TEST_LIBS, ..)
AC_SUBST(TEST_LIBS)

dnl Check for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h, , AC_MSG_ERROR(Cannot build without unistd.h))

dnl
dnl Print out the results of configuration.
dnl
AC_MSG_RESULT(===============================================================================)
AC_MSG_RESULT(CFLAGS      : ${CFLAGS})
AC_MSG_RESULT(CPPFLAGS    : ${CPPFLAGS})
AC_MSG_RESULT(LDFLAGS     : ${LDFLAGS})
AC_MSG_RESULT(LIBS        : ${LIBS})
AC_MSG_RESULT(BIN_LIBS    : ${BIN_LIBS})
AC_MSG_RESULT(BIN_LIBSOCK : ${BIN_LIBSOCK})
AC_MSG_RESULT(TEST_LIBS   : ${TEST_LIBS})
AC_MSG_RESULT()
AC_MSG_RESULT(Prefix      : ${prefix})
AC_MSG_RESULT(===============================================================================)

dnl Process the following files.
AC_OUTPUT(Makefile Howto.cook)
