dnl
dnl <Copyright = jasone>
dnl <License>
dnl
dnl Version: <Version>
dnl
dnl Process this file with autoconf to produce a configure script.
AC_INIT(include/libstash/libstash.h)
AC_CONFIG_HEADER(include/libstash/libstash_defs.h)

AC_CANONICAL_HOST
case "${host}" in
  i386-*-freebsd*)
	AC_DEFINE(_CW_OS_FREEBSD, )
        ;;
  *-*-linux*)
	AC_DEFINE(_CW_OS_LINUX, )
        ;;
  *-*-solaris2*)
	AC_DEFINE(_CW_OS_SOLARIS, )
	AC_DEFINE(_POSIX_PTHREAD_SEMANTICS)
	LIBS="$LIBS -lposix4"
        ;;
esac

dnl Check for programs.
dnl Trick AC_PROG_CC into not defining CFLAGS, even if it wasn't specified on
dnl the command line.
CFLAGS=$CFLAGS
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PATH_PROG(AR, ar, , $PATH)
AC_PATH_PROG(PERL, perl, , $PATH)
AC_PATH_PROG(CHMOD, chmod, , $PATH)
AC_PATH_PROG(BASENAME, basename, , $PATH)
AC_PATH_PROG(DIFF, diff, , $PATH)
AC_PATH_PROG(CAT, cat, , $PATH)
AC_PATH_PROG(ETAGS, etags, , $PATH)

dnl Comment out threaded dependency includes in Makefile.in if
dnl --without-pthreads is defined.
AC_ARG_WITH(pthreads, [  --with-pthreads         Build threaded libstash libraries
  --without-pthreads      Do not build threaded libstash libraries],
if test "x$with_pthreads" = "xno" ; then
  without_threads="[#]"
else
  SQRL_USE_PTHREADS()
  without_threads=""
fi
, 
SQRL_USE_PTHREADS()
without_threads=""
)
AC_SUBST(without_threads)

SQRL_DISABLE_SHARED()

dnl Define preprocessor macros.

dnl Check for header files.
dnl AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h, , AC_MSG_ERROR(Cannot build without unistd.h))

dnl Check for typedefs, structures, and compiler characteristics.
AC_C_BIGENDIAN

AC_CHECK_SIZEOF(signed char, 1)
AC_CHECK_SIZEOF(unsigned char, 1)
AC_CHECK_SIZEOF(signed short, 2)
AC_CHECK_SIZEOF(unsigned short, 2)
AC_CHECK_SIZEOF(int, 4) dnl defines SIZEOF_INT
AC_CHECK_SIZEOF(unsigned, 4)
AC_CHECK_SIZEOF(long, 4)
AC_CHECK_SIZEOF(unsigned long, 4)
AC_CHECK_SIZEOF(long long, 4)
AC_CHECK_SIZEOF(unsigned long long, 4)
AC_CHECK_SIZEOF(int *, 4) dnl defines SIZEOF_INT_P

dnl Find maximum iovec compatible with readv()/writev().
AC_TRY_RUN([
#include <stdio.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/uio.h>
#include <unistd.h>

int
main()
{
  int i, fd, nwrite;
  char buf[1024];
  struct iovec iov[1024];

  for (i = 0; i < 1024; i++)
  {
    iov[i].iov_base = &buf[i];
    iov[i].iov_len = 1;
  }

  fd = open("_LIBSTASH_MAX_IOV", O_RDWR | O_CREAT | O_TRUNC, 0644);
  
  for (i = 1024; i > 16; i >>= 1)
    if (-1 != writev(fd, iov, i))
      break;

  fprintf(stderr, "iovcnt: %d\n", i);

  ftruncate(fd, 0);
  lseek(fd, 0, SEEK_SET);
  nwrite = sprintf(buf, "%d\n", i);
  write(fd, buf, nwrite);

  close(fd);
  return 0;
}
])
maxiov=`cat _LIBSTASH_MAX_IOV`
AC_MSG_RESULT(_LIBSTASH_MAX_IOV... $maxiov)
AC_DEFINE_UNQUOTED(_LIBSTASH_MAX_IOV, $maxiov)
rm -f _LIBSTASH_MAX_IOV

AC_MSG_RESULT(================================================================)
AC_MSG_RESULT(Extra libraries to link in: ${LIBS})
AC_MSG_RESULT(Extra ld flags: ${LDFLAGS})
AC_MSG_RESULT(Compiler flags: ${CFLAGS})
AC_MSG_RESULT(C preprocessor flags: ${CPPFLAGS})
AC_MSG_RESULT(================================================================)

SQRL_SET_MAKEFILE

dnl Process the following files.
AC_OUTPUT(Makefile.bsd \
Makefile.gnu \
test/verify)

dnl autoconf doesn't keep the execute bit if it's set for the input file, so do
dnl it manually.
echo chmod u+x test/verify
chmod u+x test/verify
