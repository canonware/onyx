#!/usr/local/bin/perl
#-*-mode:perl-*-
#############################################################################
#
# Copyright (c) 1998
# Jason Evans <jasone@canonware.com>.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer as
#    the first lines of this file unmodified.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY JASON EVANS ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL JASON EVANS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#############################################################################
#
# $Source$
# $Author: jasone $
# $Revision: 50 $
# $Date: 1998-04-26 23:06:32 -0700 (Sun, 26 Apr 1998) $
#
# <<< Description >>>
#
#
#
#
#############################################################################

use Cwd; # For pwd().

#
# Parse command-line arguments.
#
use Getopt::Long;
Getopt::Long::config("bundling"); # Allow -hv rather than forcing -h -v.

$opt_retval = 
  &GetOptions("h|help" => \$opt_help,
	      "n|noact" => \$opt_noact,
	      "v|verbose" => \$opt_verbose,
	      "t|tag=s" => \$opt_tag#,
# 	    "" => \$opt_?,
# 	    "" => \$opt_?,
# 	    "" => \$opt_?,
	     );

if (($#ARGV >= 0) 
    || ($opt_retval == 0)
    || (!defined($opt_tag))
    || ($opt_help)
   )
  {
#     print STDERR "Got here (error).\n";
#     print STDERR "ARGV == @ARGV\n";
#     print STDERR "\$#ARGV == $#ARGV\n";
#     print STDERR "\$opt_retval == $opt_retval\n";
#     print STDERR "\$opt_tag == $opt_tag\n";
#     print STDERR "\$opt_verbose == $opt_verbose\n";

    &print_usage;
    exit(1);
  }

if ($opt_verbose)
  {
    print STDERR "echo SNAP_$opt_tag > last_tag\n";
  }
unless ($opt_noact)
  {
    `echo SNAP_$opt_tag > last_tag`;
  }

if ($opt_verbose)
  {
    print STDERR "cvs tag SNAP_$opt_tag sqrl\n";
  }
unless ($opt_noact)
  {
    `cvs tag SNAP_$opt_tag sqrl`;
  }

if ($opt_verbose)
  {
    print STDERR 
      "cvs export -r SNAP_$opt_tag -d sqrl_$opt_tag sqlmaster/sqrl\n";
  }
unless ($opt_noact)
  {
    `cvs export -r SNAP_$opt_tag -d sqrl_$opt_tag sqlmaster/sqrl`;
  }

if ($opt_verbose)
  {
    print STDERR "tar cvzf sqrl_$opt_tag.tar.gz sqrl_$opt_tag\n";
  }
unless ($opt_noact)
  {
    `tar cvzf sqrl_$opt_tag.tar.gz sqrl_$opt_tag`;
  }

sub print_usage
  {
    print <<EOF;
$0 usage:
  $0 [-hnv --help --noact --verbose] --tag=<tag> | -t <tag>
EOF
  }
