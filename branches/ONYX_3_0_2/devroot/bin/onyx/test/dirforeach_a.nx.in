%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% <Copyright = jasone>
%
% <License>
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Version: Onyx <Version = onyx>
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Populate a subdirectory with files.
%
% %dirname %nfiles subfiles -
/subfiles {
    1 1 3 2 roll {
	1 index `/' catenate exch cvs catenate
	`w' open
	dup `content\n' write
	close
    } for
    pop
} def

% Create a subdirectory with files in it.
%
% %dirname subdir -
/subdir {
    dup 8#755 mkdir
    5 subfiles
} def

% Recursively print directories and files in a directory tree.
%
% %dirname printtree -
/printtree {
    dup {
	1 index `/' catenate exch catenate
	dup 1 sprint
	dup `f' test {
%	    `file\n' print flush
	    pop
	}{ dup `d' test {
%	    `directory\n' print flush
	    printtree
	}{
	    `unknown\n' print flush
	} ifelse
	} ifelse
    } dirforeach
    pop
} def

% Recursively delete directories and files in a directory tree.
%
% %dirname deltree -
/deltree {
    dup {
	1 index `/' catenate exch catenate
%	dup 1 sprint
	dup `f' test {
%	    `file\n' print flush
	    unlink
	}{ dup `d' test {
%	    `directory\n' print flush
	    deltree
	}{
	    `unknown\n' print flush
	} ifelse
	} ifelse
    } dirforeach
    rmdir
} def

%
% Begin main program.
%

`Test begin\n' print flush

% Clean up the directory tree if it already exists.
argv 2 get `/dirforeach_a' catenate `d' test {
    argv 2 get `/dirforeach_a' catenate deltree
} if
argv 2 get `/dirforeach_a' catenate `d' test {
    `Directory tree already existed, and was not completely deletable:\n' print
    argv 2 get `/dirforeach_a' catenate printtree
    1 die
} if

% Create a directory tree and contents.
argv 2 get `/dirforeach_a' catenate subdir
argv 2 get `/dirforeach_a/dir_a' catenate subdir
argv 2 get `/dirforeach_a/dir_b' catenate subdir
argv 2 get `/dirforeach_a/dir_b/dir_c' catenate subdir

% Do a depth first traversal and deletion of the directory tree.
%argv 2 get `/dirforeach_a' catenate printtree
argv 2 get `/dirforeach_a' catenate deltree

% Make sure the directory tree is gone.
argv 2 get `/dirforeach_a' catenate `d' test {
    `Directory tree not completeley deleted:\n' print
    argv 2 get `/dirforeach_a' catenate printtree
    1 die
} if

`Test end\n' print
pstack
