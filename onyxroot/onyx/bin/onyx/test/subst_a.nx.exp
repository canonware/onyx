Test begin
{`Input string' `p(.)' `X\\1Y' < > subst pstack 2 npop}
1
`InXuYt string'
{`Input string' `p(.)' `X\\1Y' < > subst pstack 2 npop}
1
`InXuYt string'
{`Input string' `p(.)' `X\\1Y' < > regsub subst pstack 2 npop}
1
`InXuYt string'
{`Input String' `([a-r])' `[\\2]' subst pstack 2 npop}
1
`I[]put String'
{`Input String' `([a-r])' `[\\2]' < > subst pstack 2 npop}
1
`I[]put String'
{`Input String' `([a-r])' `[\\2]' < $g true > subst pstack 2 npop}
6
`I[][]ut St[][][][]'
{`Input String' `([a-j])|([k-r])' `[\\1|\\2]' subst pstack 2 npop}
1
`I[|n]put String'
{`Input String' `([a-j])|([k-r])' `[\\1|\\2]' < > subst pstack 2 npop}
1
`I[|n]put String'
{`Input String' `([a-j])|([k-r])' `[\\1|\\2]' < $g true > subst pstack 2 npop}
6
`I[|n][|p]ut St[|r][i|][|n][g|]'
{`Input String' `([a-j])' `\\\\1' < $g true > subst pstack 2 npop}
2
`Input Str\\in\\g'
{`Input String' `([a-j])' `\\1\\' < $g true > subst pstack 2 npop}
2
`Input Stri\\ng\\'
{`Input String' `i' `>\\1<' < $g true > subst pstack 2 npop}
1
`Input Str><ng'
{`Input String' `i' `>\\1<' < $g true $i true > subst pstack 2 npop}
2
`><nput Str><ng'
{`Multiple line\ninput string' `(^\\w+)' `>\\1<' < $g true > subst pstack 2 npop}
1
`>Multiple< line\ninput string'
{`Multiple line\ninput string' `(\\w+.)' `>\\1<' < $g true $m true > subst pstack 2 npop}
4
`>Multiple <>line<\n>input <>string<'
{`Multiple line\ninput string' `(\\w+.)' `>\\1<' < $g true $s true > subst pstack 2 npop}
4
`>Multiple <>line\n<>input <>string<'
Test end
